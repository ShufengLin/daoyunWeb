<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.CourseStudentDao">
    <resultMap type="com.utils.CourseStudent" id="courseStudentMap">
        <result property="id" column="Id"/>
        <result property="courseId" column="CourseId"/>
        <result property="studentId" column="StudentId"/>
        <result property="studentName" column="UserName"/>
        <result property="studentExp" column="StudentEXP"/>
    </resultMap>

    <select id="getCourseStudentByPage" resultMap="courseStudentMap" parameterType="PaperPage">
        SELECT cs.StudentId, u.UserName, cs.StudentEXP
        FROM course_student as cs, user as u
        <if test="userName == null">
            WHERE cs.StudentId=u.UserId and CourseId=#{courseId}
        </if>
        <if test="userName!=null">
            WHERE u.UserName like concat('%',#{userName},'%') and cs.StudentId=u.UserId and CourseId=#{courseId}
        </if>
        ORDER BY StudentEXP DESC
        limit #{beginPage},#{pageSize}
    </select>

    <select id="getCourseStudentCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM course_student as cs, user as u
        <if test="userName == null">
            WHERE cs.StudentId=u.UserId and CourseId=#{courseId}
        </if>
        <if test="userName!=null">
            WHERE u.UserName like concat('%',#{userName},'%') and cs.StudentId=u.UserId and CourseId=#{courseId}
        </if>
    </select>

    <!--结束签到使用，获取对应课程所有未签到的学生id-->
    <select id="getNoSignStudent" resultMap="courseStudentMap" parameterType="Course">
        SELECT StudentId
        FROM course_student
            WHERE  CourseId= #{courseId} and StudentId != (select StudentId from course_sign where CourseId = #{courseId})
    </select>

    <!-- 更新学生总经验-->
    <update id="updateCourseStudent" parameterType="Course">
        UPDATE course_student
        SET StudentEXP = StudentEXP + #{defaultExp}
        WHERE  CourseId = #{courseId} and StudentId = #{studentId}
    </update>



    <insert id="attendCourse" parameterType="CourseStudent">
        INSERT INTO course_student(CourseId,StudentId,StudentEXP) VALUE (#{courseId},#{studentId},#{studentExp})
    </insert>

    <select id="getStudentCourseByTwoId" resultMap="courseStudentMap" parameterType="PaperPage">
        SELECT CourseId,StudentId,StudentEXP
        FROM course_student
            WHERE StudentId=#{userId} and CourseId=#{courseId}
    </select>
</mapper>