<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.CourseDao">
    <resultMap type="Course" id="courseResultMap">
        <result property="courseId" column="CourseId"/>
        <result property="courseName" column="CourseName"/>
        <result property="courseHour" column="CourseHour"/>
        <result property="teachId" column="TeachId"/>
        <result property="startTime" column="StartTime"/>
        <result property="userName" column="UserName"/>
        <result property="coursePlace" column="CoursePlace"/>
        <result property="defaultDistance" column="DefaultDistance"/>
        <result property="isSign" column="IsSign"/>
        <result property="defaultExp" column="DefaultExp"/>

        <result property="phoneNumber" column="PhoneNumber"/>
        <result property="school" column="School"/>
        <result property="academy" column="Academy"/>
        <result property="major" column="Major"/>
    </resultMap>
    <select id="getCourseByPage" resultMap="courseResultMap" parameterType="PaperPage">
        SELECT c.CourseId,c.CourseName,c.CourseHour,c.TeachId,c.startTime,u.UserName,c.CoursePlace, c.DefaultDistance, c.IsSign , c.DefaultExp
        FROM course as c,user as u
        <if test="courseName == null">
            WHERE c.TeachId=u.UserId
        </if>
        <if test="courseName!=null">
            WHERE c.CourseName like concat('%',#{courseName},'%') and c.TeachId=u.UserId
        </if>
        ORDER BY CourseId ASC
        limit #{beginPage},#{pageSize}
    </select>
    <select id="getCourseCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM course
        <if test="courseName!=null">
            WHERE CourseName=#{courseName}
        </if>
    </select>
    <select id="getCourseByCourseId" resultMap="courseResultMap" parameterType="long">
        SELECT *
        FROM course
        WHERE CourseId=#{courseId}
    </select>

    <insert id="addCourse" parameterType="Course">
        INSERT INTO course(CourseName,CourseHour,TeachId,StartTime,CoursePlace,DefaultDistance,IsSign,DefaultExp) VALUE (#{courseName}, #{courseHour}, (select UserId from user where UserName =#{userName}), #{startTime}, #{coursePlace},100,0,2)
    </insert>

    <delete id="deleteCourseById" parameterType="long">
        DELETE FROM course WHERE CourseId=#{courseId}
    </delete>

    <delete id="deleteCourseBatchById" parameterType="java.util.List">
        DELETE FROM course WHERE CourseId IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="updateCourse" parameterType="Course">
        UPDATE course
        SET CourseName = #{courseName}, StartTime = #{startTime}, CourseHour = #{courseHour},TeachId = (select UserId from user where UserName= #{userName}), CoursePlace = #{coursePlace}
        WHERE  CourseId = #{courseId}
    </update>

    <!--  更新课程系统参数，如默认距离和经验值   -->
    <update id="updateCoursePara" parameterType="Course">
        UPDATE course
        SET DefaultDistance = #{defaultDistance}, DefaultExp= #{defaultExp}
        WHERE  CourseId = #{courseId}
    </update>

    <!--  发起签到，更新签到信息，如老师的经纬度和签到标记 -->
    <update id="updateSignPara" parameterType="Course">
        UPDATE course
        SET IsSign = 1, Longitude = #{longitude}, Latitude= #{latitude}
        WHERE  CourseId = #{courseId}
    </update>

    <!-- 结束签到，更新对应课程isSign值为0 -->
    <update id="updateEndSign" parameterType="Course">
        UPDATE course
        SET IsSign = 0
        WHERE  CourseId = #{courseId}
    </update>

    <!-- 根据courseId获取IsSign，即是否开启签到   -->
    <select id="getIsSign" resultMap="courseResultMap" parameterType="Course">
        SELECT IsSign
        FROM course
        WHERE CourseId = #{courseId}
    </select>

    <!-- 根据courseId获取默认距离，默认经验，经纬度   -->
    <select id="getLoLa" resultMap="courseResultMap" parameterType="Course">
        SELECT DefaultDistance, DefaultExp, Longitude , Latitude
        FROM course
        WHERE CourseId = #{courseId}
    </select>

    <select id="queryById" resultMap="courseResultMap" parameterType="long">
        SELECT CourseId,CourseName,CourseHour,TeachId,CoursePlace
        FROM course
        WHERE CourseId=#{courseId}
    </select>

    <select id="queryAllPaper" resultMap="courseResultMap">
        SELECT CourseId,CourseName,CourseHour,TeachId,CoursePlace
        FROM course
    </select>

    <select id="getOwnCourseByPage" resultMap="courseResultMap" parameterType="PaperPage">
        SELECT CourseId,CourseName,CourseHour,TeachId,startTime,CoursePlace
        FROM course
        <if test="courseName == null">
            WHERE TeachId=#{userId}
        </if>
        <if test="courseName!=null">
            WHERE CourseName like concat('%',#{courseName},'%') and TeachId=#{userId}
        </if>
        ORDER BY CourseId ASC
        limit #{beginPage},#{pageSize}
    </select>

    <select id="getOwnCourseCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM course
        <if test="courseName == null">
            WHERE TeachId=#{userId}
        </if>
        <if test="courseName!=null">
            WHERE CourseName like concat('%',#{courseName},'%') and TeachId=#{userId}
        </if>
    </select>

    <select id="getCourseInfoByCourseId" resultMap="courseResultMap" parameterType="long">
        SELECT c.CourseName,c.CourseHour,c.TeachId,c.startTime,c.CoursePlace,u.UserName,u.PhoneNumber,u.School,u.Academy,u.Major
        FROM course as c,user as u
        WHERE CourseId=#{courseId} and c.TeachId = u.UserId
    </select>
</mapper>